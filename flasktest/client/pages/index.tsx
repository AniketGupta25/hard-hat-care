import React, { useEffect, useState } from "react";
import Head from 'next/head'
import { 
  Button,
  Flex, FormControl, FormLabel, Heading, Input, Text, Box, Select, chakra, Divider, Grid, GridItem
} from '@chakra-ui/react'
import DataRow from '@/components/DataRow'
import CSVReader from 'react-csv-reader'

function index() {

  const [message, setMessage] = useState([]);
  const [onLandingPage, setOnLandingPage] = useState(true);
  const emptyArray : Array<any> = [];
  const [csvData, setCSVData] = useState<Array<any>>(emptyArray);

  const uploadCSV = ()=>{
    setOnLandingPage(!onLandingPage);
  }

  const papaparseOptions = {
    header: true,
    dynamicTyping: true,
    skipEmptyLines: true,
    transformHeader: (header : any) =>
      header
        .toLowerCase()
        .replace(/\W/g, '_')
  }

  const onSubmit = () => {
    fetch("http://localhost:8080/api/home", {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ data: csvData }),
    }).then(
      response => response.json()
    ).then(
      (data) => {
        console.log(data.result)
        setMessage(data.result)
      }
    );
  }

  return(
    <>
      <Head>
        <title>Hard Hat Care</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {onLandingPage && 
          <Flex bg="black" direction="column" height="100vh" width="100vw" color="white" align="center" justify="center" textAlign="center">
            <Heading fontSize="9xl">Hard Hat Care</Heading>
            <Text fontSize="3xl" width="75vw">Providing the tools to care for what matters most: your people</Text>
            <Button colorScheme='purple' mt="60px" onClick={uploadCSV}>Start Analysis</Button>
          </Flex>
      }

      {!onLandingPage && 
        <Flex direction="column" bg="white" height="100vh" p="20px" width="100vw" align="center">
          <Flex direction="column" width="100%" color="black" textAlign="center" align="center">
            <Heading fontSize="5xl">Upload CSV</Heading>
            <Text fontSize="lg" width="75vw">Upload a CSV file here to begin the process</Text>
            
              <CSVReader
                cssClass="csv-reader-input"
                // label="Select CSV with secret Death Star statistics"
                onFileLoaded={(data : any[], fileInfo : any) => setCSVData(data)}
                onError={()=>{}}
                parserOptions={papaparseOptions}
                inputId="ObiWan"
                inputName="ObiWan"
                inputStyle={{color: 'red'}}
              />
      
            <Button colorScheme='purple' onClick={()=>{onSubmit()}}>Process Data</Button>
          </Flex>

          <Divider m="20px"/>

          <Flex direction="column" width="90%" bg="whitesmoke" p="20px">
            <Box bg="lightgray" p="10px" border="solid">
              <Grid templateColumns='repeat(5, 1fr)' gap={6}>
                <Flex w='100%' h='10' justify="center" align="center">
                  <Text fontWeight="900" fontSize="3xl">Date of Joining</Text>
                </Flex>
                <Flex w='100%' h='10' justify="center" align="center">
                  <Text fontWeight="900" fontSize="3xl">Gender</Text>
                </Flex>
                <Flex w='100%' h='10' justify="center" align="center">
                  <Text fontWeight="900" fontSize="3xl">Designation</Text>
                </Flex>
                <Flex w='100%' h='10' justify="center" align="center">
                  <Text fontWeight="900" fontSize="3xl">Resource Allocation</Text>
                </Flex>
                <Flex w='100%' h='10' justify="center" align="center">
                  <Text fontWeight="900" fontSize="3xl">Mental Fatigue</Text>
                </Flex>
              </Grid>
            </Box>

            {csvData.map((val: any, key : number)=>{
              return (
                <DataRow dateOfJoining={val.date_of_joining} genderText={val.gender} designationText={val.designation} resourceText={val.resource_allocation} mentalText={val.mental_fatigue_score}/>
              )
            })
            }
          </Flex>
        </Flex>
      }
    </>
  );
}

export default index;